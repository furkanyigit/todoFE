{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfurk\\\\todo\\\\src\\\\components\\\\Todo\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [todoList, setTodoList] = useState([]);\n  const [entry, setEntry] = useState();\n  const [date, setDate] = useState();\n  const [precedence, setPrecedence] = useState();\n  const [done, setDone] = useState();\n  const handleGuncelle = id => {\n    let todo = {\n      entry,\n      precedence,\n      done\n    };\n    // let ent = document.querySelector(\".entry\"+id).value;\n    // let setDate = document.querySelector(\".date\"+id).value;\n    // let setPrecedence = document.querySelector(\".precedence\"+id).value;\n\n    fetch('http://localhost:8088/api/update/' + id, {\n      method: \"PUT\"\n    }).then(response => response.json()).then(result => {\n      console.log('Success:', result);\n      getTodo();\n    });\n  };\n  const handleUpdate = id => {\n    var gorev = document.querySelector(\".task\" + id);\n    if (window.getComputedStyle(gorev).display == \"none\") {\n      gorev.style.display = 'block';\n    } else if (window.getComputedStyle(gorev).display == \"block\") {\n      gorev.style.display = 'none';\n    }\n  };\n\n  //delete \n\n  // const handleClick = () => {\n  //     console.info('You clicked the Chip.');\n  // };\n\n  const handleDelete = id => {\n    console.info('You clicked the delete icon.' + id);\n    fetch('http://localhost:8088/api/delete/' + id, {\n      method: \"DELETE\"\n    }).then(response => response.json()).then(result => {\n      console.log('Success:', result);\n      getTodo();\n    });\n\n    //.then(data => this.useState({ todoList: data.todo }));\n  };\n\n  //true false \n  const [checked, setChecked] = React.useState(true);\n  const handleChange = event => {\n    setChecked(event.target.checked);\n  };\n  useEffect(() => {\n    getTodo();\n  }, []);\n  function getTodo() {\n    fetch(\"/api/get-all\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setTodoList(result);\n      console.log(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Error !!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: todoList.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: todo.done,\n            onChange: handleChange,\n            inputProps: {\n              'aria-label': 'controlled'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this), todo.entry, todo.date, todo.precedence, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdate(todo.id),\n            children: \" update \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(todo.id),\n            children: \" delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"tasks\",\n            class: \"task\" + todo.id,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: todo.id,\n              onChange: e => setEntry(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: entry,\n              onChange: e => setEntry(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: todo.date,\n              onChange: e => setDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: precedence,\n              onChange: e => setPrecedence(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: done,\n              onChange: e => setDone(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleGuncelle(todo.id),\n              children: \" g\\xFCncelle \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Todo, \"ori+Lta4rUGOtS1v6gpb6vVFu7w=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useEffect","Checkbox","Box","TextField","Todo","error","setError","isLoaded","setIsLoaded","todoList","setTodoList","entry","setEntry","date","setDate","precedence","setPrecedence","done","setDone","handleGuncelle","id","todo","fetch","method","then","response","json","result","console","log","getTodo","handleUpdate","gorev","document","querySelector","window","getComputedStyle","display","style","handleDelete","info","checked","setChecked","handleChange","event","target","res","map","e","value"],"sources":["C:/Users/mfurk/todo/src/components/Todo/Todo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\n\r\nfunction Todo() {\r\n\r\n\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [todoList, setTodoList] = useState([]);\r\n    const [entry, setEntry] = useState();\r\n    const [date, setDate] = useState();\r\n    const [precedence, setPrecedence] = useState();\r\n    const [done, setDone] = useState();\r\n\r\n\r\n    const handleGuncelle = (id) => {\r\n\r\n        let todo={entry,precedence,done}\r\n        // let ent = document.querySelector(\".entry\"+id).value;\r\n        // let setDate = document.querySelector(\".date\"+id).value;\r\n        // let setPrecedence = document.querySelector(\".precedence\"+id).value;\r\n\r\n \r\n        fetch('http://localhost:8088/api/update/' + id, {\r\n            method: \"PUT\"\r\n        })\r\n        .then(response => response.json())\r\n        .then((result) => {\r\n            console.log('Success:', result);\r\n            getTodo();\r\n        })\r\n\r\n};\r\n\r\n\r\n    const handleUpdate = (id) => {\r\n       \r\n        var gorev = document.querySelector(\".task\"+id);\r\n \r\n        if (window.getComputedStyle(gorev).display == \"none\") {\r\n            gorev.style.display = 'block';\r\n        } else if (window.getComputedStyle(gorev).display == \"block\") {\r\n            gorev.style.display = 'none';\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //delete \r\n\r\n    // const handleClick = () => {\r\n    //     console.info('You clicked the Chip.');\r\n    // };\r\n\r\n    const handleDelete = (id) => {\r\n        console.info('You clicked the delete icon.' + id);\r\n        fetch('http://localhost:8088/api/delete/' + id, {\r\n            method: \"DELETE\"\r\n        })\r\n            .then(response => response.json())\r\n            .then((result) => {\r\n                console.log('Success:', result);\r\n                getTodo();\r\n            })\r\n\r\n        //.then(data => this.useState({ todoList: data.todo }));\r\n    };\r\n\r\n    //true false \r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const handleChange =\r\n        (event: React.ChangeEvent<HTMLInputElement>) => { setChecked(event.target.checked); };\r\n\r\n\r\n    useEffect(() => {\r\n        getTodo()\r\n    }, [])\r\n\r\n\r\n    function getTodo() {\r\n        fetch(\"/api/get-all\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setTodoList(result)\r\n                    console.log(result)\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n\r\n            )\r\n    }\r\n    if (error) {\r\n        return <div> Error !!!</div>\r\n    } else if (!isLoaded) {\r\n        return <div> Loading... </div>\r\n    } else {\r\n        return (\r\n            <div>\r\n\r\n                <ul>\r\n                    {todoList.map(todo => (\r\n\r\n                        <li>\r\n\r\n\r\n                            {\r\n                                <Checkbox\r\n                                    checked={todo.done}\r\n\r\n                                    onChange={handleChange}\r\n                                    inputProps={{ 'aria-label': 'controlled' }}\r\n                                />\r\n                            }\r\n\r\n                             {todo.entry}\r\n                             {todo.date}\r\n                             {todo.precedence}\r\n\r\n\r\n                            <button onClick={() => handleUpdate(todo.id)}> update </button>\r\n                            <button onClick={() => handleDelete(todo.id)}> delete </button>\r\n                            <div id=\"tasks\" class={\"task\"+todo.id} >\r\n                            <input  type=\"text\" value={todo.id} onChange={(e) => setEntry(e.target.value)}  /> \r\n                            <input  type=\"text\" value={entry} onChange={(e) => setEntry(e.target.value)}  /> \r\n                            <input  type=\"text\" value={todo.date} onChange={(e) => setDate(e.target.value)}    /> \r\n                            <input  type=\"text\" value={precedence} onChange={(e) => setPrecedence(e.target.value)}  /> \r\n                            <input  type=\"text\" value={done} onChange={(e) => setDone(e.target.value)}  /> \r\n                            <button onClick={() => handleGuncelle(todo.id)}> güncelle </button>\r\n                            \r\n                            {/* <input class={\"id\"+todo.id} type=\"text\" value={todo.id} onChange={(e) => setEntry(e.target.value)}  /> \r\n                            <input class={\"entry\"+todo.id} type=\"text\" value={entry} onChange={(e) => setEntry(e.target.value)}  /> \r\n                            <input class={\"date\"+todo.id} type=\"text\" value={todo.date} onChange={(e) => setDate(e.target.value)}    /> \r\n                            <input class={\"precedence\"+todo.id}  type=\"text\" value={precedence} onChange={(e) => setPrecedence(e.target.value)}  /> \r\n                            <input class={\"done\"+todo.id} type=\"text\" value={done} onChange={(e) => setDone(e.target.value)}  /> \r\n                            <button onClick={() => handleGuncelle(todo.id)}> güncelle </button> */}\r\n\r\n\r\n                            </div>\r\n                            {/* <Chip\r\n                                //onClick={onDelete}\r\n                                onDelete={() => handleDelete(todo.id)}\r\n                            />\r\n                        */}\r\n\r\n                        </li>\r\n\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Todo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}