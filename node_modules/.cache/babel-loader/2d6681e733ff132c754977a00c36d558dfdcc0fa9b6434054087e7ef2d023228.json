{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfurk\\\\todo\\\\src\\\\components\\\\Todo\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [todoList, setTodoList] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/get-all\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setTodoList(result);\n      console.log(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Error !!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.entry, \" \", todo.date, todo.precedence]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Todo, \"sek91ZEeTQFZSa+7SqT3Gp/FfxM=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useEffect","Todo","error","setError","isLoaded","setIsLoaded","todoList","setTodoList","fetch","then","res","json","result","console","log","map","todo","entry","date","precedence"],"sources":["C:/Users/mfurk/todo/src/components/Todo/Todo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Todo(){\r\n    const [error , setError]= useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [todoList, setTodoList] = useState([]);\r\n \r\n    useEffect(() => {\r\n        fetch(\"/api/get-all\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                setIsLoaded(true);\r\n                setTodoList(result)\r\n                console.log(result)\r\n            },\r\n            (error) => {\r\n                setIsLoaded(true);\r\n                setError(error);\r\n            }\r\n        )\r\n    },[] )\r\n    if(error){\r\n        return <div> Error !!!</div>\r\n    }else if(!isLoaded){\r\n        return <div> Loading... </div>\r\n    }else{\r\n        return(\r\n            \r\n            <ul>\r\n                {todoList.map(todo => (\r\n                    <li>\r\n                    \r\n\r\n                    {todo.entry} {todo.date}{(todo.precedence)}\r\n\r\n\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\nexport default Todo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,SAASC,IAAI,GAAE;EAAA;EACX,MAAM,CAACC,KAAK,EAAGC,QAAQ,CAAC,GAAEJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,cAAc,CAAC,CACpBC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CACAG,MAAM,IAAK;MACRP,WAAW,CAAC,IAAI,CAAC;MACjBE,WAAW,CAACK,MAAM,CAAC;MACnBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACvB,CAAC,EACAV,KAAK,IAAK;MACPG,WAAW,CAAC,IAAI,CAAC;MACjBF,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC,CACJ;EACL,CAAC,EAAC,EAAE,CAAE;EACN,IAAGA,KAAK,EAAC;IACL,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAChC,CAAC,MAAK,IAAG,CAACE,QAAQ,EAAC;IACf,oBAAO;MAAA,UAAK;IAAY;MAAA;MAAA;MAAA;IAAA,QAAM;EAClC,CAAC,MAAI;IACD,oBAEI;MAAA,UACKE,QAAQ,CAACS,GAAG,CAACC,IAAI,iBACd;QAAA,WAGCA,IAAI,CAACC,KAAK,EAAC,GAAC,EAACD,IAAI,CAACE,IAAI,EAAGF,IAAI,CAACG,UAAU;MAAA;QAAA;QAAA;QAAA;MAAA,QAI5C;IAAC;MAAA;MAAA;MAAA;IAAA,QACD;EAEb;AACJ;AAAC,GAxCQlB,IAAI;AAAA,KAAJA,IAAI;AAyCb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}